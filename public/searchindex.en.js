var relearn_searchindex = [
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Week 1 Objectives Learn the regulations Connect with other FCJ members Understand and practice basic AWS services Tasks to be carried out this week Day Task Start Date Completion Date Reference Material 1 - Get acquainted with FCJ members 09/09/2025 09/09/2025 - Read and take note of internship unit rules and regulations Rules and regulations - Learn and practice making a static website with Hugo Hugo quickstart, Learn Hugo Theme - Create AWS account. Practice creating Users group, Users (IAM user) Create AWS account; Create user, group user 2 - Learn and practice creating Budget (Template \u0026 Custom: Cost, Usage, Saving plans, Reservation) 10/09/2025 10/09/2025 Create budget - Update worklog Sample worklog 3 - Learn about support packages, types of support request, how to create a support 11/09/2025 11/09/2025 Support packages 4 - Translated a blog 12/09/2025 12/09/2025 Translated Blog 1 - Update worklog (UI, translated blog) 5 - Learn theory about VPC (Subnet, Route Table, Internet Gateway, NAT Gateway) 13/09/2025 13/09/2025 AWS Virtual Private Cloud - Update worklog 6 - Translate the 2nd Blog 14/09/2025 14/09/2025 Translated Blog 2 - Update worklog",
    "description": "Week 1 Objectives Learn the regulations Connect with other FCJ members Understand and practice basic AWS services Tasks to be carried out this week Day Task Start Date Completion Date Reference Material 1 - Get acquainted with FCJ members 09/09/2025 09/09/2025 - Read and take note of internship unit rules and regulations Rules and regulations - Learn and practice making a static website with Hugo Hugo quickstart, Learn Hugo Theme - Create AWS account. Practice creating Users group, Users (IAM user) Create AWS account; Create user, group user 2 - Learn and practice creating Budget (Template \u0026 Custom: Cost, Usage, Saving plans, Reservation) 10/09/2025 10/09/2025 Create budget - Update worklog Sample worklog 3 - Learn about support packages, types of support request, how to create a support 11/09/2025 11/09/2025 Support packages 4 - Translated a blog 12/09/2025 12/09/2025 Translated Blog 1 - Update worklog (UI, translated blog) 5 - Learn theory about VPC (Subnet, Route Table, Internet Gateway, NAT Gateway) 13/09/2025 13/09/2025 AWS Virtual Private Cloud - Update worklog 6 - Translate the 2nd Blog 14/09/2025 14/09/2025 Translated Blog 2 - Update worklog",
    "tags": [],
    "title": "Week 1 Worklog",
    "uri": "/en/1-worklog/1.1-week_1/index.html"
  },
  {
    "breadcrumb": "",
    "content": "INTERNSHIP REPORT Student Information: Full Name: Phan Canh Tuan Dat\nPhone Number: 0867829257\nEmail: pcanhtuandat@gmail.com\nUniversity: Sai Gon University\nMajor: Information Technology\nClass: DCT1226\nInternship Company: Amazon Web Services Vietnam Co., Ltd.\nInternship Position: FCJ Cloud Intern\nInternship Duration: From 12/08/2025 to 12/11/2025\nReport Content 1. Worklog\n2. Proposal\n3. Translated Blogs\n4. Events Participated\n5. Workshop\n6. Self-awareness\n7. Sharing and Feedback",
    "description": "INTERNSHIP REPORT Student Information: Full Name: Phan Canh Tuan Dat\nPhone Number: 0867829257\nEmail: pcanhtuandat@gmail.com\nUniversity: Sai Gon University\nMajor: Information Technology\nClass: DCT1226\nInternship Company: Amazon Web Services Vietnam Co., Ltd.\nInternship Position: FCJ Cloud Intern\nInternship Duration: From 12/08/2025 to 12/11/2025\nReport Content 1. Worklog\n2. Proposal\n3. Translated Blogs\n4. Events Participated\n5. Workshop\n6. Self-awareness\n7. Sharing and Feedback",
    "tags": [],
    "title": "Internship Report",
    "uri": "/en/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Translated Blogs",
    "content": "Hồ sơ quyết định kiến trúc (ADR): Thực tiễn tốt nhất để ra quyết định hiệu quả Tác giả: Christoph Kappey, Dominik Goby, và Darius Kunce – 20/03/2025\nChủ đề: Kiến trúc, Thực tiễn tốt nhất, Trình độ trung cấp (200), Quản lý \u0026 Điều hành, Hướng dẫn kỹ thuật\nHồ sơ quyết định kiến trúc (ADR) là công cụ giúp ghi lại và truyền đạt các quyết định quan trọng về quy trình và kiến trúc trong dự án kỹ thuật. Từ kinh nghiệm triển khai hơn 200 ADR ở nhiều dự án khác nhau, tác giả đã tổng hợp những cách làm hiệu quả giúp đơn giản hóa quy trình ra quyết định và nâng cao khả năng hợp tác trong nhóm.\nTrong bài viết này, ta sẽ bao quát về:\nCách áp dụng ADR trong tổ chức Các kinh nghiệm rút ra từ hơn 200 ADR thực tế Mẹo thực hành để rút gọn quá trình ra quyết định kiến trúc Ví dụ trong các dự án từ nhóm nhỏ 10 người đến nhóm lớn trên 100 người Những khó khăn thường gặp khi đưa ra quyết định kiến trúc 1. Thách thức thường gặp trước khi áp dụng ADR Đồng bộ nhóm – Các nhóm phát triển thường mất 20–30% thời gian để phối hợp với nhau, làm chậm tiến độ ra mắt tính năng và gia tăng chi phí do phải chỉnh sửa kiến trúc nhiều lần. Tính linh hoạt thiết kế – Khó tìm điểm cân bằng giữa thiết kế ban đầu và sự thay đổi liên tục trong môi trường Agile hoặc DevOps. Yêu cầu phi chức năng – Luôn có những đánh đổi giữa bảo mật, khả năng bảo trì và khả năng mở rộng. Thay đổi yêu cầu – Kiến trúc phải liên tục thích ứng với mục tiêu kinh doanh mới mà vẫn giữ được sự ổn định hệ thống. Chuyển giao kiến thức – Cần đảm bảo thành viên mới nhanh chóng hòa nhập và tuân thủ cách làm việc hiện tại của nhóm. 2. Làm thế nào để tối ưu hóa quy trình ra quyết định Từ kinh nghiệm của tác giả và các đồng nghiệp trong nhiều dự án – từ nhóm dưới 10 người đến dự án phức tạp có hơn 100 người chia thành nhiều luồng công việc – ADR đã đóng vai trò như kim chỉ nam xuyên suốt vòng đời dự án.\nSau hơn 3 năm áp dụng, tác giả đã đúc kết nhiều bài học thực tiễn. Việc ghi lại bối cảnh, các phương án đã cân nhắc, và lý do lựa chọn giúp nâng cao tính minh bạch, chia sẻ tri thức và trách nhiệm trong nhóm.\nMột số khuyến nghị quan trọng để xây dựng ADR hiệu quả:\nGiữ cho cuộc họp ADR ngắn gọn – Mỗi buổi chỉ nên kéo dài 30–45 phút để tập trung và hiệu quả. Áp dụng phong cách “readout” – Các thành viên dành 10–15 phút đọc tài liệu ADR, sau đó đóng góp ý kiến trực tiếp vào nội dung. Cách này tăng sự tham gia và tiết kiệm thời gian. Chọn thành phần tham dự gọn nhẹ nhưng đa dạng – Mời đại diện từ các nhóm liên quan, tổng số dưới 10 người để đảm bảo thảo luận hiệu quả. Chỉ tập trung vào một quyết định – Nếu có nhiều vấn đề, hãy tách thành các ADR riêng biệt. Tách biệt thiết kế và quyết định – Sử dụng tài liệu thiết kế riêng để phân tích phương án, rồi liên kết chúng trong ADR. Giải quyết triệt để phản hồi – Mọi ý kiến phải được phản hồi, chỉnh sửa hoặc trao đổi để đạt đồng thuận. Đưa ra quyết định kịp thời – Tránh họp quá nhiều lần. Thông thường chỉ cần 1–3 buổi readout là đủ. Khuyến khích sự hợp tác nhóm – Tác giả ADR phải chịu trách nhiệm, lấy ý kiến từ tất cả bên liên quan trước khi chốt. Duy trì và cập nhật liên tục – ADR phải được theo dõi, cập nhật khi có thay đổi, và liên kết với phiên bản mới nếu bị thay thế. Lưu trữ tập trung – Tất cả ADR nên được đặt ở nơi mọi người trong dự án đều truy cập được. 3. Mẹo triển khai và tiêu chí thành công Khi bắt đầu áp dụng, chúng ta nên:\nKhởi động với một nhóm thử nghiệm nhỏ Chuẩn hóa bằng các mẫu ADR rõ ràng Thiết lập chu kỳ rà soát định kỳ Đặt ra thước đo hiệu quả như: Thời gian đưa ra quyết định Mức độ hài lòng của nhóm Số lần phải sửa kiến trúc Hiệu quả phối hợp giữa các nhóm 4. Kết luận Áp dụng ADR theo những thực tiễn trên sẽ giúp quá trình ra quyết định trở nên gọn nhẹ, tăng tính hợp tác, và đảm bảo mọi quyết định đều được ghi nhận rõ ràng, minh bạch và phù hợp với mục tiêu chung.\nTham khảo thêm tại AWS Prescriptive Guidance để có phần giới thiệu và ví dụ ADR, hoặc truy cập ADR GitHub organization.\nLink bài viết gốc: (https://aws.amazon.com/blogs/architecture/master-architecture-decision-records-adrs-best-practices-for-effective-decision-making/)",
    "description": "Hồ sơ quyết định kiến trúc (ADR): Thực tiễn tốt nhất để ra quyết định hiệu quả Tác giả: Christoph Kappey, Dominik Goby, và Darius Kunce – 20/03/2025\nChủ đề: Kiến trúc, Thực tiễn tốt nhất, Trình độ trung cấp (200), Quản lý \u0026 Điều hành, Hướng dẫn kỹ thuật\nHồ sơ quyết định kiến trúc (ADR) là công cụ giúp ghi lại và truyền đạt các quyết định quan trọng về quy trình và kiến trúc trong dự án kỹ thuật. Từ kinh nghiệm triển khai hơn 200 ADR ở nhiều dự án khác nhau, tác giả đã tổng hợp những cách làm hiệu quả giúp đơn giản hóa quy trình ra quyết định và nâng cao khả năng hợp tác trong nhóm.",
    "tags": [],
    "title": "Blog 1",
    "uri": "/en/3-translated_blogs/blog_1/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Week 2 Objectives Learn and practice configure VPC and its related features Translate several blogs Update worklog structure Tasks to be carried out this week Day Task Start Date Completion Date Reference Material 1 - Learn about VPC and its feature 15/09/2025 15/09/2025 VPC, Youtube Lesson 2 - Practice creating VPC, Subnets, Internet Gateway 16/09/2025 16/09/2025 Create VPC, Create Subnets, Create Internet Gateway - Update worklog 3 - Practice creating Route table, Security groups 17/09/2025 17/09/2025 Create Route Table, Create Security Groups 4 - Learn about Deploying Amazon EC2 Instances 18/09/2025 18/09/2025 Deploying Amazon EC2 Instances, Youtube Tutorial - Practice creating EC2 server, Checking connection, creating NAT Gateway Create EC2 instance, Check connection, Create NAT Gateway - Translated a blog Translated Blog 3 5 - Practice using Reachability Analyzer 19/09/2025 19/09/2025 Create Reachability Analyzer - Team meeting to decide proposal project 6 - Translated a blog 20/09/2025 20/09/2025 Translated Blog 4 - Update worklog",
    "description": "Week 2 Objectives Learn and practice configure VPC and its related features Translate several blogs Update worklog structure Tasks to be carried out this week Day Task Start Date Completion Date Reference Material 1 - Learn about VPC and its feature 15/09/2025 15/09/2025 VPC, Youtube Lesson 2 - Practice creating VPC, Subnets, Internet Gateway 16/09/2025 16/09/2025 Create VPC, Create Subnets, Create Internet Gateway - Update worklog 3 - Practice creating Route table, Security groups 17/09/2025 17/09/2025 Create Route Table, Create Security Groups 4 - Learn about Deploying Amazon EC2 Instances 18/09/2025 18/09/2025 Deploying Amazon EC2 Instances, Youtube Tutorial - Practice creating EC2 server, Checking connection, creating NAT Gateway Create EC2 instance, Check connection, Create NAT Gateway - Translated a blog Translated Blog 3 5 - Practice using Reachability Analyzer 19/09/2025 19/09/2025 Create Reachability Analyzer - Team meeting to decide proposal project 6 - Translated a blog 20/09/2025 20/09/2025 Translated Blog 4 - Update worklog",
    "tags": [],
    "title": "Week 2 Worklog",
    "uri": "/en/1-worklog/1.2-week_2/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "Week 1: Getting familiar with Hugo and basic AWS services\nWeek 2: Learn and pratice using VPC and its features\nWeek 3: Doing task B…\nWeek 4: Doing task C…\nWeek 5: Doing task D…\nWeek 6: Doing task E…\nWeek 7: Doing task F…\nWeek 8: Doing task G…\nWeek 9: Doing task H…\nWeek 10: Doing task I…\nWeek 11: Doing task J…\nWeek 12: Doing task K…",
    "description": "Week 1: Getting familiar with Hugo and basic AWS services\nWeek 2: Learn and pratice using VPC and its features\nWeek 3: Doing task B…\nWeek 4: Doing task C…\nWeek 5: Doing task D…\nWeek 6: Doing task E…\nWeek 7: Doing task F…\nWeek 8: Doing task G…\nWeek 9: Doing task H…\nWeek 10: Doing task I…\nWeek 11: Doing task J…\nWeek 12: Doing task K…",
    "tags": [],
    "title": "Worklog",
    "uri": "/en/1-worklog/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Translated Blogs",
    "content": "Định tuyến động sử dụng Máy chủ định tuyến AWS VPC Ammar Latif và Akshay Choudhry - 02/09/2025\nAmazon VPC Route Server cho phép triển khai cơ chế định tuyến động trong Amazon VPC bằng cách sử dụng giao thức BGP (Border Gateway Protocol). Với dịch vụ này, bạn có thể kiểm soát lưu lượng giữa các ứng dụng trên cloud và hệ thống on-premises một cách thông minh và hiệu quả hơn. BGP giúp bạn quản lý đường đi của dữ liệu linh hoạt, đặc biệt trong các tình huống xảy ra sự cố, đồng thời giảm thiểu khối lượng công việc thủ công và hạn chế rủi ro do con người.\nTrong bài viết này, chúng ta sẽ xem xét nhiều tình huống ứng dụng trong đó việc định tuyến động ở mức ứng dụng có ảnh hưởng trực tiếp đến cách dữ liệu được truyền đến các instance, cũng như cách hệ thống xử lý khi có sự cố để giảm gián đoạn xuống mức thấp nhất.\nYêu cầu kiến thức nền tảng Người đọc được giả định là đã nắm các khái niệm mạng cơ bản trong AWS liên quan đến tính sẵn sàng cao và cơ chế failover, chẳng hạn như Amazon Elastic Compute Cloud (Amazon EC2), Elastic Network Interfaces (ENI), Amazon VPC, bảng định tuyến VPC, và Availability Zone (AZ). Ngoài ra, bạn cũng nên hiểu về các nguyên lý mạng phổ biến như địa chỉ IP, CIDR, định tuyến mạng, BGP và Bidirectional Forwarding Detection (BFD). Bài viết này sẽ không đi sâu vào việc giải thích các khái niệm nền tảng đó, mà tập trung mô tả cách sử dụng chúng để triển khai giải pháp floating IP cho việc chuyển đổi dự phòng ứng dụng. Nếu bạn cần tìm hiểu thêm về nền tảng mạng AWS, hãy tham khảo tài liệu chính thức của AWS về VPC networking và các bài viết trong mục AWS Networking and Content Delivery Ở đây.\nCác tình huống kết nối ứng dụng Trong VPC, route table là thành phần quyết định luồng dữ liệu đi như thế nào. Chúng được gán cho subnet, Internet Gateway (IGW), hoặc Virtual Private Gateway để định nghĩa đường đi của lưu lượng trước khi đến đích. Ví dụ, bạn có thể thêm route để tất cả traffic đi qua một firewall trước khi đến ứng dụng, hoặc buộc subnet phải đi qua NAT Gateway, IGW, Peering Connection, hoặc VPN Gateway tùy nhu cầu.\nMột số ứng dụng đặc biệt (như thiết bị an ninh mạng hoặc xử lý traffic) yêu cầu khả năng kiểm soát chi tiết đường đi của dữ liệu để đảm bảo tất cả lưu lượng phải được gửi đến ứng dụng trung gian này trước khi đến điểm đích cuối cùng. Một ví dụ quen thuộc là việc điều hướng traffic đến thiết bị bảo mật để kiểm tra trước khi gửi sang dịch vụ chính.\nNếu chỉ dùng static route thì bạn có thể làm được điều đó, nhưng nó tồn tại nhiều hạn chế:\nKhông tự động thích ứng khi có sự cố. Cần thao tác thủ công để thay đổi. Quản lý trở nên phức tạp khi hệ thống mở rộng. Hệ quả là tăng nguy cơ lỗi con người và kéo dài thời gian phục hồi. Trong khi đó, dynamic routing có thể giải quyết: tự động cập nhật route table, đảm bảo khả năng mở rộng, và hỗ trợ failover mà không cần thao tác thủ công. Lưu ý: AWS khuyến nghị sử dụng Gateway Load Balancer (GWLB) cho nhu cầu HA và redundancy. Chỉ khi nào ứng dụng không hỗ trợ GWLB (hoặc môi trường không có GWLB, ví dụ AWS Local Zone), bạn mới nên cân nhắc giải pháp với Route Server.\nTính năng của VPC Route Server VPC Route Server cung cấp định tuyến động bên trong VPC thông qua BGP. Các ứng dụng mạng có thể dùng BGP để cập nhật bảng định tuyến của VPC, từ đó kiểm soát lưu lượng chi tiết và hỗ trợ failover tự động giữa các instance trong cùng hoặc khác AZ. Route Server cũng có thể cập nhật bảng định tuyến của VPC và IGW với các đường đi IPv4/IPv6 ưu tiên, giúp workload có khả năng chịu lỗi cao. Khi một AZ gặp sự cố, Route Server sẽ tự động cập nhật route table để chuyển hướng traffic sang AZ khác, cải thiện khả năng quản lý và tính tương thích với ứng dụng của bên thứ ba. Chúng ta sẽ xem xét các tình huống dưới đây để thấy được các khả năng định tuyến của VPC Route Server.\nTình huống #1: Dùng Floating IP cho application failover (chuyển đổi dự phòng ứng dụng) Giả sử bạn có ứng dụng quan trọng chạy trên một EC2 ở AZ1. Để đảm bảo tính sẵn sàng, bạn triển khai thêm một instance standby ở AZ2. Ứng dụng này không tích hợp với GWLB hoặc môi trường không hỗ trợ GWLB. Mục tiêu của bạn là duy trì ứng dụng hoạt động liên tục khi instance chính hoặc cả AZ1 bị lỗi.\nTrong kịch bản này, chúng ta minh họa cách sử dụng floating IP để thực hiện quá trình failover liền mạch giữa hai EC2 instance được triển khai ở hai AZ khác nhau trong một kiến trúc high availability. Bạn có một ứng dụng quan trọng chạy trên EC2 ở AZ1, đồng thời một EC2 khác được triển khai ở AZ2 để làm máy dự phòng. Ứng dụng này không được tích hợp với Gateway Load Balancer (GWLB), hoặc môi trường AWS của bạn (ví dụ Local Zone) không hỗ trợ GWLB. Mục tiêu đặt ra là đảm bảo cơ chế dự phòng cho ứng dụng trong trường hợp instance chính hoặc cả AZ1 gặp sự cố.\nBạn có thể dùng AWS CloudFormation từ repo aws-samples để triển khai kịch bản #1 vào tài khoản AWS của mình. Template CloudFormation sẽ tự động tạo ra môi trường sau:\nMột VPC với 3 subnet nằm trên 2 AZ. Bảng định tuyến (route table) cho cả 3 subnet. Tạo và gắn Internet Gateway (IGW) vào VPC, đồng thời thêm route mặc định ra IGW trong route table. Tạo và gắn Route Server cho VPC (Route Server sử dụng ASN 65000). Tạo hai Route Server Endpoint (RSE) trong mỗi subnet để đảm bảo tính sẵn sàng cao. Thiết lập các route server peer. Tạo hai EC2 instance để mô phỏng ứng dụng HA cần kiểm thử, sử dụng phần mềm Gobgp. Mỗi instance sẽ chạy BGP với ASN 65001 và kết nối BGP tới RSE trong subnet tương ứng. File cấu hình Gobgp (gobgpd.conf) được nạp sẵn thông qua user-data khi tạo EC2, và được lưu tại thư mục /home/ec2-user. Tạo thêm một instance test để ping tới loopback IP của ứng dụng HA. Có thể sử dụng AWS Systems Manager để truy cập và quản lý các instance vừa tạo. Tổng quan giải pháp Chúng ta sử dụng một địa chỉ floating IP được cấp từ dải CIDR nằm ngoài VPC để ứng dụng sử dụng. Client sẽ kết nối đến ứng dụng thông qua địa chỉ IP này. Trong trường hợp instance chính gặp sự cố, toàn bộ lưu lượng gửi đến floating IP sẽ được tự động chuyển hướng sang ENI của instance dự phòng ở AZ thứ hai. Cách làm này giúp giảm thiểu gián đoạn dịch vụ, nhờ áp dụng cơ chế floating IP kết hợp với định tuyến động trong VPC, mà không cần cập nhật cấu hình phía client hay thực hiện thao tác thủ công.\nHình 1. Instance#1 đang hoạt động\rNhư minh họa ở Hình 1, ứng dụng hoạt động theo mô hình active/standby giữa hai AZ. Cả hai EC2 instance cùng quảng bá một địa chỉ loopback (ví dụ 172.16.1.1/32) ra mạng thông qua phiên BGP với hai VPC RSE nằm trong cùng một subnet. Việc sử dụng hai RSE nhằm đảm bảo tính dự phòng và nâng cao khả năng sẵn sàng của dịch vụ định tuyến.\nHình 2. Các điểm cuối (endpoint) của máy chủ định tuyến trong VPC\rHình 3. Các thiết bị ngang hàng của máy chủ định tuyến trong VPC\rHình 4. Bảng RIB (Routing Information Base) của máy chủ định tuyến\rĐể đảm bảo lưu lượng mạng luôn được chuyển đến instance đang hoạt động, ứng dụng sử dụng thuộc tính BGP AS Path. Instance hoạt động sẽ quảng bá tuyến với AS Path ngắn hơn, trong khi instance dự phòng thêm nhiều số AS khác vào đường đi, khiến tuyến đó bị ưu tiên thấp hơn. Do BGP luôn chọn tuyến có AS Path ngắn nhất, nên tuyến từ instance hoạt động sẽ được chọn làm tuyến chính. Ngoài ra, các thuộc tính khác của BGP như Multi-Exit Discriminator (MED) cũng có thể được dùng để thiết lập ưu tiên định tuyến tương tự.\nCả instance hoạt động và dự phòng đều quảng bá địa chỉ 172.16.1.1/32 qua BGP đến cả hai Route Server Endpoint (RSE) trong subnet của chúng.\nMáy chủ định tuyến VPC nhận được 4 quảng bá cho cùng một tiền tố. Điều này được minh họa ở Hình 4, nơi loopback 172.16.1.1/32 được gửi đến từ cả bốn RSE.\nDựa vào quy tắc chọn đường đi của BGP, máy chủ ưu tiên tuyến từ instance hoạt động vì có AS Path ngắn hơn. Trong Hình 4 thể hiện rõ rằng chỉ một trong bốn tuyến được chọn và cài đặt.\nMáy chủ định tuyến VPC sau đó xác định ENI gắn với instance hoạt động và cập nhật bảng định tuyến của VPC để chuyển tiếp lưu lượng tới ENI-A cho địa chỉ 172.16.1.1/32.\nHình 5. Bảng định tuyến VPC được cập nhật, trong đó tuyến 172.16.1.1/32 trỏ đến ENI của instance đang hoạt động.\rBạn có thể kiểm tra cấu hình Gobgp bằng cách kết nối vào một trong các instance (instance-rs-az1 hoặc instance-rs-az2) thông qua EC2 Session Manager.\nTệp cấu hình Gobgp nằm tại /home/ec2-user/gobgpd.conf.\nsh-5.2$ sudo more /home/ec2-user/gobgpd.conf [global.config] as = 65001 router-id = \"10.0.1.203\" [[neighbors]] [neighbors.config] neighbor-address = \"10.0.1.230\" peer-as = 65000 [[neighbors.afi-safis]] [neighbors.afi-safis.config] afi-safi-name = \"ipv4-unicast\" [[neighbors]] [neighbors.config] neighbor-address = \"10.0.1.136\" peer-as = 65000 [[neighbors.afi-safis]] [neighbors.afi-safis.config] afi-safi-name = \"ipv4-unicast\"\rSử dụng lệnh sau để kiểm tra trạng thái BGP neighbor. Kết quả sẽ hiển thị hai neighbor, tương ứng với hai VPC RSE trong subnet của instance.\nsh-5.2$ sudo /home/ec2-user/gobgp neighbor Peer AS Up/Down State |#Received Accepted 10.0.1.136 65000 22:43:07 Establ | 0 0 10.0.1.230 65000 22:43:08 Establ | 0 0\rKiểm tra rằng tuyến loopback đã được quảng bá qua BGP:\nsh-5.2$ sudo /home/ec2-user/gobgp global rib Network Next Hop AS_PATH Age Attrs *\u003e 172.16.1.1/32 0.0.0.0 22:42:21 [{Origin: ?}]\rĐể kiểm tra thiết lập định tuyến, bạn có thể truy cập vào instance kiểm thử (test-instance) bằng phương pháp Systems Manager. Sau khi đăng nhập thành công, hãy ping đến địa chỉ 172.16.1.1. Bạn sẽ nhận được phản hồi xuất phát từ instance đang hoạt động “instance-rs-az1”.\nsh-5.2$ ping 172.16.1.1 PING 172.16.1.1 (172.16.1.1) 56(84) bytes of data. 64 bytes from 172.16.1.1: icmp_seq=1 ttl=127 time=0.712 ms 64 bytes from 172.16.1.1: icmp_seq=2 ttl=127 time=0.338 ms 64 bytes from 172.16.1.1: icmp_seq=3 ttl=127 time=0.378 ms\rPhát hiện và khôi phục khi xảy ra Failover Để mô phỏng một tình huống failover, bạn có thể tắt instance đang hoạt động (instance-rs-az1).\nNếu instance đang hoạt động gặp sự cố hoặc không thể truy cập, BGP sẽ phát hiện lỗi trong khoảng thời gian timeout đã cấu hình.\nVPC Route Server đánh dấu phiên BGP với instance đang hoạt động là down và rút tuyến đường ra khỏi bảng RIB.\nMột quá trình BGP re-convergence được kích hoạt, và tuyến đường do instance dự phòng quảng bá sẽ được chọn làm đường đi tốt nhất.\nBảng định tuyến VPC được cập nhật để chuyển tiếp lưu lượng đến 172.16.1.1/32 qua ENI của instance dự phòng (ENI-B).\nLưu lượng được chuyển tiếp liền mạch sang instance dự phòng, duy trì tính sẵn sàng của ứng dụng mà không gây gián đoạn cho client.\nĐể kiểm tra thiết lập định tuyến, bạn có thể truy cập vào instance kiểm thử (test-instance) bằng phương pháp Systems Manager. Sau khi đăng nhập, hãy ping đến 172.16.1.1. Bạn sẽ nhận được phản hồi từ instance hiện tại đang hoạt động (instance-rs-az2).\nsh-5.2$ ping 172.16.1.1 PING 172.16.1.1 (172.16.1.1) 56(84) bytes of data. 64 bytes from 172.16.1.1: icmp_seq=1 ttl=127 time=0.712 ms 64 bytes from 172.16.1.1: icmp_seq=2 ttl=127 time=0.338 ms 64 bytes from 172.16.1.1: icmp_seq=3 ttl=127 time=0.378 ms\rHình 6. Instance2 đảm nhận vai trò hoạt động\rHình 7. Bảng định tuyến đã được cập nhật để trỏ đến ENI của Inst2\rTình huống #2: Kiểm tra lưu lượng ingress VPC\nHãy xem xét kịch bản khi bạn có một mô hình bảo mật tập trung, trong đó các thiết bị tường lửa (được triển khai dưới dạng EC2 instance) sẽ kiểm tra toàn bộ lưu lượng north-south hoặc east-west trong VPC của bạn. Các tường lửa này đóng vai trò then chốt trong tư thế bảo mật và phải luôn khả dụng để kiểm tra cũng như chuyển tiếp lưu lượng. Để duy trì tính sẵn sàng cao, bạn triển khai hai EC2 firewall ở hai AZ khác nhau. Mục tiêu là đảm bảo rằng nếu firewall đang hoạt động gặp sự cố, thì lưu lượng sẽ được chuyển hướng liền mạch sang firewall dự phòng.\nTrong kịch bản này, chúng ta minh họa cách triển khai tính khả dụng cao (HA) và cơ chế failover cho các firewall stateful được triển khai trên nhiều AZ trong AWS, bằng cách sử dụng VPC Route Server và cập nhật định tuyến động.\nTổng quan giải pháp Tất cả lưu lượng đi vào VPC thông qua IGW sẽ được định tuyến đến firewall để kiểm tra trước khi đi vào application subnet. Tương tự, toàn bộ lưu lượng đi ra từ application subnet cũng sẽ được định tuyến đến firewall để kiểm tra trước khi được gửi ra internet.\nHình dưới đây minh họa một thiết bị firewall được cài đặt trên một EC2 instance trong subnet A. Thiết bị này sẽ kiểm tra toàn bộ lưu lượng đi từ IGW đến subnet B (application subnet) và từ subnet B ra IGW.\nHình 8. Tình huống #2 khi firewall 1 đang hoạt động\rMỗi firewall thiết lập bốn phiên BGP: hai cho subnet A và hai cho subnet B, bao gồm cả subnet ứng dụng và bảng định tuyến IGW.\nĐể đảm bảo chỉ có một firewall được sử dụng tại một thời điểm, độ ưu tiên đường đi trong BGP được điều chỉnh bằng cách sử dụng các metric của BGP. Chúng ta tập trung vào các metric sau:\nAS_Path: Thuộc tính BGP cho thấy chuỗi các số hiệu Hệ thống Tự trị (AS) mà một tuyến đường đã đi qua. Nó vừa đóng vai trò là cơ chế ngăn vòng lặp, vừa là tiêu chí lựa chọn đường đi, trong đó đường đi ngắn hơn sẽ được ưu tiên.\nMED (Multi-Exit Discriminator): Thuộc tính BGP được sử dụng để ảnh hưởng đến lưu lượng vào bằng cách đề xuất điểm vào ưa thích khi tồn tại nhiều kết nối giữa hai hệ thống tự trị. Giá trị MED thấp hơn sẽ được ưu tiên.\nFirewall đang hoạt động sẽ quảng bá các prefix với thuộc tính BGP ưu tiên cao nhất, trong khi firewall dự phòng quảng bá cùng prefix nhưng với các thuộc tính ít ưu tiên hơn. Trong kịch bản này, chúng ta sử dụng AS path prepending, trong đó firewall dự phòng sẽ tăng độ dài AS path khi quảng bá prefix đến RSE.\nBảng định tuyến Internet Gateway\nCác bảng định tuyến gắn với IGW (Internet Gateway) kiểm soát đường đi mà lưu lượng internet đi vào VPC sẽ sử dụng. Người dùng thường dùng nó để chèn firewall và các chức năng mạng ảo khác vào đường đi của lưu lượng internet inbound.\nCả firewall hoạt động và firewall dự phòng đều được kết nối với VPC Route Server và quảng bá CIDR của subnet ứng dụng đến các RSE. Tuy nhiên, firewall dự phòng quảng bá tuyến với AS path dài hơn. VPC Route Server sẽ chạy thuật toán chọn đường tốt nhất của BGP và cài đặt tuyến được quảng bá bởi firewall hoạt động.\nBảng định tuyến cho subnet IGW có tuyến như sau:\nApplication subnet CIDR ---\u003e Active Firewall ENI\rVPC sẽ định tuyến lưu lượng có đích đến subnet ứng dụng đến ENI của firewall hoạt động.\nBảng định tuyến của subnet ứng dụng Cả tường lửa đang hoạt động lẫn dự phòng đều được kết nối với VPC Route Server và đều quảng bá địa chỉ 0.0.0.0/0 đến các RSE. Tuy nhiên, tường lửa dự phòng quảng bá 0.0.0.0/0 với một đường dẫn AS dài hơn. VPC Route Server sẽ chạy thuật toán BGP để chọn tuyến đường tốt nhất và chỉ sử dụng tuyến được quảng bá bởi tường lửa đang hoạt động.\nBảng định tuyến của subnet ứng dụng có tuyến như sau:\n0.0.0.0/0 ---\u003e ENI của tường lửa đang hoạt động\rĐiều này có nghĩa là mọi lưu lượng từ server ứng dụng sẽ đi qua tường lửa đang hoạt động trước khi ra Internet.\nBảng định tuyến của subnet tường lửa\nBảng định tuyến của subnet dành cho tường lửa có tuyến tĩnh sau:\n0.0.0.0/0 ---\u003e igw-id\rTức là tất cả lưu lượng từ đây sẽ được gửi thẳng ra Internet Gateway (IGW).\nPhát hiện chuyển đổi dự phòng với BFD\nBFD được bật trên mỗi phiên BGP giữa các tường lửa và các RSE của VPC. BFD cho phép phát hiện sự cố rất nhanh — thường dưới một giây — bằng cách liên tục trao đổi các gói điều khiển.\nTrong trường hợp tường lửa gặp sự cố:\nBFD phát hiện phiên BGP giữa tường lửa đang hoạt động và các RSE bị lỗi.\nCác RSE đánh dấu phiên BGP này là DOWN.\nCác RSE rút lại các tuyến ưu tiên (bao gồm cả tiền tố nội bộ và bên ngoài) mà tường lửa bị lỗi đang quảng bá.\nQuá trình hội tụ lại BGP diễn ra — các RSE chọn tuyến thay thế (dự phòng) được quảng bá bởi tường lửa còn hoạt động.\nTuyến này trở thành tuyến active trong bảng điều khiển định tuyến của VPC.\nLưu lượng tự động được chuyển hướng sang tường lửa dự phòng.\nHình 9. Tường lửa FW1 gặp sự cố dẫn đến lưu lượng được chuyển hướng sang FW2.\rPhục hồi/Quay lại (Failback/Recovery) Khi tường lửa bị lỗi phục hồi và thiết lập lại các phiên BGP và BFD:\nNó bắt đầu quảng bá lại các thuộc tính BGP ưu tiên.\nCác RSE phát hiện tuyến đường hấp dẫn hơn và chuyển lưu lượng trở lại tường lửa đã được phục hồi.\nQuá trình này có thể được tự động hóa hoặc điều khiển theo chính sách quản trị (ví dụ: chuyển đổi dự phòng ưu tiên hoặc không ưu tiên).\nƯu điểm của việc sử dụng VPC Route Server với Failover dựa trên BGP + BFD:\nHội tụ nhanh: Phát hiện sự cố dưới một giây nhờ BFD.\nHoàn toàn tự động: Không cần script hay can thiệp thủ công.\nMở rộng dễ dàng: Hoạt động trên nhiều tiền tố và instance.\nĐiều khiển gốc đám mây: Tích hợp trực tiếp với lớp định tuyến của VPC.\nChuẩn hóa giao thức: Sử dụng hành vi BGP theo tiêu chuẩn ngành.\nNhững điểm cần lưu ý\nQuá trình hội tụ lại định tuyến có thể gây ra một khoảng thời gian gián đoạn. Nếu ứng dụng đã tích hợp với GWLB, hãy cân nhắc sử dụng GWLB làm lựa chọn đầu tiên cho việc chuyển đổi dự phòng ứng dụng.\nĐảm bảo tắt tính năng route propagation nếu bạn đang quản lý tuyến đường thủ công.\nSử dụng BFD hoặc các công cụ phát hiện sự cố nhanh khác để hội tụ nhanh hơn.\nĐảm bảo các tuyến đường đối xứng nếu bạn thực hiện kiểm tra đường trả về (return-path inspection).\nBật giám sát và cảnh báo để theo dõi tình trạng hệ thống, các thay đổi về tuyến đường và các sự kiện chuyển đổi dự phòng.\nKết luận Trong bài viết này, chúng ta đã tìm hiểu cách sử dụng Amazon VPC Route Server để xây dựng các thiết kế mạng trong đám mây có khả năng mở rộng, chịu lỗi và an toàn, bằng cách bật tính năng chuyển đổi dự phòng cho các ứng dụng quan trọng và triển khai kiến trúc khả dụng cao. Chúng tôi đã giới thiệu hai mô hình kiến trúc khác nhau và cung cấp các chi tiết triển khai. VPC Route Server mở ra các khả năng định tuyến nâng cao trong AWS bằng cách tích hợp các giao thức BGP và BFD theo tiêu chuẩn ngành vào mạng VPC gốc. Để bắt đầu với VPC Route Server ngay hôm nay, bạn có thể tham khảo tài liệu và hướng dẫn Amazon VPC Route Server Get Started.\nCập nhật: Vào ngày 15 tháng 9 năm 2025, phiên bản trước của bài viết có sử dụng các biểu tượng kiến trúc AWS đã lỗi thời. Bài viết đã được cập nhật để phản ánh bộ biểu tượng kiến trúc AWS hiện tại.\nLink bài viết gốc: (https://aws.amazon.com/blogs/networking-and-content-delivery/dynamic-routing-using-amazon-vpc-route-server/)",
    "description": "Định tuyến động sử dụng Máy chủ định tuyến AWS VPC Ammar Latif và Akshay Choudhry - 02/09/2025\nAmazon VPC Route Server cho phép triển khai cơ chế định tuyến động trong Amazon VPC bằng cách sử dụng giao thức BGP (Border Gateway Protocol). Với dịch vụ này, bạn có thể kiểm soát lưu lượng giữa các ứng dụng trên cloud và hệ thống on-premises một cách thông minh và hiệu quả hơn. BGP giúp bạn quản lý đường đi của dữ liệu linh hoạt, đặc biệt trong các tình huống xảy ra sự cố, đồng thời giảm thiểu khối lượng công việc thủ công và hạn chế rủi ro do con người.",
    "tags": [],
    "title": "Blog 2",
    "uri": "/en/3-translated_blogs/blog_2/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Week 3 Objectives Learn and get familiar with Route 53 and its related features Translate several blogs Update worklog structure Tasks to be carried out this week Day Task Start Date Completion Date Reference Material 1 - Learn about Route 53 and its feature 22/09/2025 22/09/2025 Route 53 - Translated a blog Translated Blog 4 2 - Practice creating Key pair, CloudFormation Template, Configure Security Group 23/09/2025 23/09/2025 Create Key pair, Initialize CloudFormation Template 3 - Practice creating Key pair, CloudFormation Template, Configure Security Group 24/09/2025 24/09/2025 Create Key pair, Initialize CloudFormation Template, Configure Security Group 4 - Practice connecting to Remote Desktop Gateway (RDGW) by Remote Desktop Protocol (RDP) 25/09/2025 25/09/2025 Connecting to RDGW, Youtube tutorial - Team meeting to discuss about workshop project 5 - Practice deploy Microsoft Active Directory 26/09/2025 26/09/2025 Deploy Microsoft Active Directory 6 - Practice deploy Microsoft Active Directory 27/09/2025 27/09/2025 Deploy Microsoft Active Directory - Pratice configure DNS Configure DNS",
    "description": "Week 3 Objectives Learn and get familiar with Route 53 and its related features Translate several blogs Update worklog structure Tasks to be carried out this week Day Task Start Date Completion Date Reference Material 1 - Learn about Route 53 and its feature 22/09/2025 22/09/2025 Route 53 - Translated a blog Translated Blog 4 2 - Practice creating Key pair, CloudFormation Template, Configure Security Group 23/09/2025 23/09/2025 Create Key pair, Initialize CloudFormation Template 3 - Practice creating Key pair, CloudFormation Template, Configure Security Group 24/09/2025 24/09/2025 Create Key pair, Initialize CloudFormation Template, Configure Security Group 4 - Practice connecting to Remote Desktop Gateway (RDGW) by Remote Desktop Protocol (RDP) 25/09/2025 25/09/2025 Connecting to RDGW, Youtube tutorial - Team meeting to discuss about workshop project 5 - Practice deploy Microsoft Active Directory 26/09/2025 26/09/2025 Deploy Microsoft Active Directory 6 - Practice deploy Microsoft Active Directory 27/09/2025 27/09/2025 Deploy Microsoft Active Directory - Pratice configure DNS Configure DNS",
    "tags": [],
    "title": "Week 3 Worklog",
    "uri": "/en/1-worklog/1.3-week_3/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Translated Blogs",
    "content": "Cách CommBank xây dựng nền tảng giao dịch CommSec có độ sẵn sàng cao và vận hành bền vững Kris Severijns, Aaron Bull, Henry Zhao, và Terence Lum – 19/08/2025\nCommSec, công ty môi giới chứng khoán trực tuyến hàng đầu tại Úc và là công ty con của Commonwealth Bank of Australia (CommBank), hỗ trợ hàng triệu khách hàng gia tăng tài sản thông qua việc đầu tư dễ dàng, tiện lợi và chi phí hợp lý vào cả thị trường trong nước lẫn quốc tế.\nCommSec đóng vai trò quan trọng trong hành trình tài chính của khách hàng, cung cấp các dịch vụ thiết yếu như nghiên cứu thị trường, quản lý danh mục và thực hiện giao dịch. Với kỳ vọng từ phía khách hàng về khả năng hoạt động 24/7, nền tảng này phải duy trì độ tin cậy ở mức cao nhất. Đồng thời, là tổ chức được quản lý bởi Ủy ban Chứng khoán và Đầu tư Úc (ASIC), CommSec phải bảo đảm khả năng vận hành bền vững và tuân thủ yêu cầu về lưu trữ dữ liệu tại Úc để giữ vững sự minh bạch và an toàn cho thị trường tài chính. Trong bài viết này, chúng ta sẽ cùng tìm hiểu cách CommSec tận dụng dịch vụ AWS để xây dựng một nền tảng giao dịch vừa ổn định, vừa hiệu năng cao, vừa đáp ứng quy định khắt khe và mang đến trải nghiệm vượt trội cho khách hàng.\nThách thức khi vận hành đa đám mây CommSec là một trong những hệ thống trọng yếu đầu tiên của CommBank chuyển từ trung tâm dữ liệu on-premises sang môi trường public cloud. Năm 2015, CommBank bắt đầu dịch chuyển tầng web và mobile của CommSec, đến 2019 thì hoàn tất việc chuyển cả tầng ứng dụng. Là một trong những đơn vị tiên phong, CommSec ban đầu lựa chọn kiến trúc đa đám mây (active-active) để chứng minh tính bền vững của cloud, sử dụng AWS Asia Pacific (Sydney) Region như một miền lỗi (fault domain).\nTuy nhiên, việc vận hành đa đám mây mang đến nhiều khó khăn: duy trì song song hai pipeline triển khai, một mô hình vận hành trải rộng trên hai nền tảng cloud khác nhau, cùng quy trình failover phức tạp dựa vào cơ chế “witness” bên ngoài. Điều này không chỉ làm tăng chi phí vận hành mà còn kéo chậm tốc độ phát triển, hạn chế khả năng tận dụng dịch vụ native của cloud, khiến đổi mới sáng tạo bị bó hẹp.\nHướng giải pháp Khi AWS trở thành nhà cung cấp cloud chiến lược của CommBank, đội ngũ CommSec đã tái kiến trúc toàn bộ tầng ứng dụng, web và mobile vào đầu năm 2025 để vận hành hoàn toàn trên AWS. Với bước chuyển đổi này, họ đã thiết lập một “ranh giới cô lập sự cố” (fault isolation boundary) mới, đơn giản hóa kiến trúc nhưng vẫn giữ được mức độ bền vững tương đương giải pháp đa đám mây trước đây.\nTrong thiết kế cũ, nếu một cloud provider hoặc trung tâm dữ liệu gặp sự cố, lưu lượng sẽ được chuyển sang nền tảng còn lại. Với kiến trúc mới chỉ trên AWS, CommSec chọn Availability Zone (AZ) làm ranh giới cô lập sự cố. Nhờ Amazon Application Recovery Controller (ARC) zonal shift, họ có thể chuyển lưu lượng ra khỏi AZ gặp sự cố để giảm thiểu tác động đến khách hàng, đồng thời vẫn đáp ứng yêu cầu về sự tách biệt cả vật lý và logic giữa các AZ trong một Region. ARC zonal shift được tích hợp sẵn với load balancer, cho phép điều hướng lưu lượng mà không cần phụ thuộc vào control plane. Ngoài ra, nó còn giúp quản lý tình huống “gray failure” (hệ thống bị lỗi một phần) để giảm thiểu ảnh hưởng tới khách hàng.\nViệc hợp nhất hệ thống lên AWS và tận dụng ARC zonal shift để xử lý sự cố đã giúp đội ngũ CommSec đạt được nhiều lợi ích quan trọng:\nKhả năng failover tích hợp sẵn từ ARC zonal shift cho phép họ xây dựng quy trình tự động và toàn diện để nhanh chóng chuyển hướng lưu lượng ra khỏi một Availability Zone gặp sự cố.\nPlaybook chi tiết được xây dựng và kiểm thử định kỳ nhằm đảm bảo các quy trình failover luôn hiệu quả và đội ngũ vận hành luôn sẵn sàng.\nPipeline triển khai tiêu chuẩn hóa cùng cấu hình đơn giản hơn giúp việc cập nhật hệ điều hành và triển khai code nhanh gấp đôi so với trước.\nGiảm 25% dung lượng cơ bản khi vận hành nền tảng CommSec trên ba Availability Zone của AWS, so với mô hình cũ phải duy trì bốn stack trên hai cloud, từ đó cắt giảm đáng kể chi phí vận hành.\nSơ đồ sau minh họa kiến trúc giải pháp.\nNhóm CommSec đã triển khai một số cải tiến nhằm tăng cường khả năng chịu lỗi:\nDo việc scale-in và scale-out diễn ra nhiều lần mỗi ngày, quá trình mở rộng cần đảm bảo tính ổn định cao nhất. Nhóm CommSec đã loại bỏ các phụ thuộc vào tài nguyên bên ngoài trong toàn bộ quy trình bootstrap khi scale-out bằng cách lưu trữ và truy xuất các tệp nhị phân ứng dụng trực tiếp từ Amazon Simple Storage Service (Amazon S3) trong cùng tài khoản AWS.\nVì lưu lượng truy cập biến động mạnh, đặc biệt vào thời điểm mở cửa thị trường (lượng truy cập của CommSec thường tăng gấp ba lần chỉ trong khoảng 9:59 đến 10:02 sáng), nhóm đã thiết lập Load Balancer Capacity Unit (LCU) reservations cho các load balancer ở tầng web. Cách này giúp đảm bảo Application Load Balancer (ALB) có đủ dung lượng ngay từ đầu phiên giao dịch, thay vì phải phụ thuộc vào cơ chế scaling phản ứng đối với các đợt tăng đột biến đã biết trước.\nHọ cũng triển khai cơ chế kiểm tra sức khỏe (health check) của ALB để phát hiện các lỗi nghiêm trọng, từ đó tự động loại bỏ các instance gặp sự cố khỏi target group. Lưu lượng truy cập sẽ được chuyển hướng khỏi các instance lỗi, đồng thời hệ thống sẽ gửi cảnh báo để đội vận hành kịp thời điều tra và xử lý.\nNgoài ra, các kết nối AWS Direct Connect mới được thiết lập từ AWS đến Australian Liquidity Centre (trung tâm đặt hạ tầng chính của Sở giao dịch chứng khoán Úc – ASX, nơi vận hành các hệ thống giao dịch, thanh toán và bù trừ) nhằm nâng cao độ tin cậy trong kết nối tới các thị trường tài chính, bao gồm cả ASX và CBOE.\nARC zonal shift để giúp giảm thiểu sự cố Năm 2023, AWS đã ra mắt zonal shift, một phần của Amazon Application Recovery Controller. Với zonal shift, bạn có thể chuyển hướng lưu lượng ứng dụng ra khỏi một Availability Zone theo cách thức highly available cho các tài nguyên được hỗ trợ. Hành động này giúp nhanh chóng khôi phục một ứng dụng khi một Availability Zone gặp sự cố, giảm thời gian và mức độ ảnh hưởng đến ứng dụng do các sự kiện như mất điện, hỏng phần cứng hoặc phần mềm. Zonal shift hỗ trợ Application và Network Load Balancers, Amazon EC2 Auto Scaling Groups, và Amazon Elastic Kubernetes Service (Amazon EKS).\nNhóm CommSec đã bật ARC zonal shift trên các ALB cho tầng web và ứng dụng của họ với cross-zone load balancing được bật. Khi bắt đầu, zonal shift thực hiện hai hành động. Thứ nhất, nó gỡ bỏ địa chỉ IP của node load balancer trong Availability Zone được chỉ định khỏi DNS, vì vậy các truy vấn mới sẽ không được phân giải đến endpoint đó. Điều này ngăn các yêu cầu mới từ client được gửi đến node đó. Thứ hai, nó chỉ thị cho các node load balancer trong các Availability Zone khác không định tuyến yêu cầu đến các target trong Availability Zone bị sự cố. Cross-zone load balancing vẫn được sử dụng trong các Availability Zone còn lại trong suốt quá trình zonal shift, như hình dưới đây.\nSau khi sự cố được giải quyết và ứng dụng hoạt động trở lại trong tất cả các Availability Zone, nhóm CommSec hủy zonal shift, và lưu lượng được phân phối lại trên cả ba Availability Zone.\nLợi ích của ARC zonal shift ARC zonal shift giúp các tổ chức duy trì SLA về tính khả dụng cao hơn, giảm chi phí vận hành liên quan đến các quy trình chuyển đổi dự phòng thủ công nhiều bước, và giảm thiểu thất thoát doanh thu do gián đoạn dịch vụ. Tính đơn giản của ARC zonal shift giúp các nhóm có thể thực hiện thường xuyên các bài kiểm thử quy trình di tản Availability Zone theo yêu cầu, với mức rủi ro thấp. Khả năng thực hiện xác thực định kỳ đảm bảo các quy trình failover vẫn đáng tin cậy và xây dựng sự tự tin của tổ chức trong khả năng khôi phục sau thảm họa.\n“ARC zonal shift là cách hiệu quả nhất để CommSec sử dụng các dịch vụ AWS trong khi vẫn đáp ứng yêu cầu về khả năng chịu lỗi. Nó mang lại một giải pháp sẵn có, dễ dàng hơn so với việc tự chúng tôi triển khai một giải pháp khôi phục Availability Zone. Hy vọng rằng chúng tôi sẽ không bao giờ phải dùng đến nó, nhưng việc kiểm thử định kỳ khả năng chịu lỗi đảm bảo rằng nó luôn sẵn sàng và sẽ hoạt động nếu chúng tôi cần.”\n– Henry Zhao, Kỹ sư phần mềm tại CommBank.\nKết luận Bằng việc sử dụng các dịch vụ AWS và triển khai kiến trúc Multi-AZ mạnh mẽ, nền tảng giao dịch của CommSec tiếp tục đáp ứng những nhu cầu khắt khe của nhà môi giới trực tuyến hàng đầu tại Úc. Sự kết hợp giữa các khả năng của ARC zonal shift, cấu hình load balancer được tối ưu hóa, cùng với các runbook và quy trình vận hành toàn diện đã giúp CommSec duy trì độ tin cậy vượt trội trong khi phục vụ hàng triệu khách hàng. Hành trình của CommSec cho thấy cách mà những quyết định kiến trúc thận trọng và các dịch vụ được quản lý bởi AWS có thể giúp các tổ chức đạt được cả vận hành xuất sắc lẫn trải nghiệm khách hàng vượt trội cho những ứng dụng tài chính quan trọng.\nĐể tìm hiểu thêm, hãy tham khảo AWS Fault Isolation Boundaries và Amazon Application Recovery Controller.\nLink bài viết gốc: (https://aws.amazon.com/blogs/architecture/how-commbank-made-their-commsec-trading-platform-highly-available-and-operationally-resilient/)",
    "description": "Cách CommBank xây dựng nền tảng giao dịch CommSec có độ sẵn sàng cao và vận hành bền vững Kris Severijns, Aaron Bull, Henry Zhao, và Terence Lum – 19/08/2025\nCommSec, công ty môi giới chứng khoán trực tuyến hàng đầu tại Úc và là công ty con của Commonwealth Bank of Australia (CommBank), hỗ trợ hàng triệu khách hàng gia tăng tài sản thông qua việc đầu tư dễ dàng, tiện lợi và chi phí hợp lý vào cả thị trường trong nước lẫn quốc tế.",
    "tags": [],
    "title": "Blog 3",
    "uri": "/en/3-translated_blogs/blog_3/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Week 4 Objectives Workshop Project: Planning \u0026 Analysis (Define architecture, workload) Translate several blogs Update worklog structure Tasks to be carried out this week Day Task Start Date Completion Date Reference Material 1 - Learn about Route 53 and its feature 22/09/2025 22/09/2025 Route 53 - Translated a blog Translated Blog 5",
    "description": "Week 4 Objectives Workshop Project: Planning \u0026 Analysis (Define architecture, workload) Translate several blogs Update worklog structure Tasks to be carried out this week Day Task Start Date Completion Date Reference Material 1 - Learn about Route 53 and its feature 22/09/2025 22/09/2025 Route 53 - Translated a blog Translated Blog 5",
    "tags": [],
    "title": "Week 4 Worklog",
    "uri": "/en/1-worklog/1.4-week_4/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Translated Blogs",
    "content": "BLOG 4",
    "description": "BLOG 4",
    "tags": [],
    "title": "Blog 4",
    "uri": "/en/3-translated_blogs/blog_4/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Week 5",
    "uri": "/en/1-worklog/1.5-week_5/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "Multi-Region SaaS Task Management Platform A Global AWS Solution for Low-Latency, Resilient Collaboration\nExecutive Summary The Multi-Region SaaS Task Management Platform is designed to deliver a Trello/Asana-like experience with low latency and high availability for users across the US, EU, and Asia. Built with Spring Boot microservices and Aurora MySQL as the core database, the platform supports real-time collaboration, board/task management, and notifications.\nBy leveraging AWS Multi-Region services, the system provides:\nLow-latency reads using Aurora Global Database read replicas.\nHigh availability with regional failover strategies.\nGlobal access via CloudFront, Route 53, and S3 replication.\nOptional active-active metadata with DynamoDB Global Tables.\nThe solution ensures that users can continue working seamlessly, even during regional outages, while maintaining predictable costs and operational efficiency.\nProblem Statement What’s the Problem? Traditional SaaS task management platforms often run in a single region, which creates:\nHigh latency for users outside the main region (e.g., EU/Asia users connecting to US).\nRisk of downtime if the primary region fails.\nComplexity in scaling for global collaboration.\nThe Solution A multi-region architecture on AWS that uses:\nAurora Global Database for consistent data with global reads.\nECS Fargate clusters running Spring Boot microservices per region.\nRoute 53 latency-based routing to serve users from the closest region.\nS3 + CloudFront for static content and user file storage with cross-region replication.\nEventBridge/SNS/Lambda for global event propagation (notifications, background jobs).\nThis hybrid approach combines reliability, performance, and global scalability while keeping Aurora MySQL as the core datastore.\nBenefits and ROI\nReduced latency for global users.\nImproved reliability with disaster recovery playbooks.\nDemonstrates enterprise-ready SaaS capabilities for multi-region scale.\nCost-effective compared to building a fully active-active database system.\nSolution Architecture Architecture Overview Microservices: Auth, Board, Task, Notification – deployed on ECS Fargate in each region.\nDatabase: Aurora Global Database – single writer (US), multiple read replicas (EU, Asia).\nStorage: S3 buckets with Cross-Region Replication + CloudFront for global edge caching.\nRouting: Route 53 latency-based DNS + health checks for regional failover.\nEvents: EventBridge/SNS/Lambda for propagating domain events across regions.\nOptional: DynamoDB Global Tables for active-active metadata (notifications, activity feed).\nAWS Services Used\nAurora MySQL Global Database – single-writer, multi-reader setup.\nECS Fargate – containerized Spring Boot services per region.\nAmazon S3 + CloudFront – static assets and file storage with CRR.\nRoute 53 – latency-based routing and health checks.\nAmazon ECR – container registry with cross-region replication.\nSecrets Manager – multi-region replicated credentials.\nEventBridge/SNS/Lambda – event-driven cross-region sync.\nCloudWatch \u0026 X-Ray – monitoring and tracing.\nComponent Design\nApplication Layer: Spring Boot microservices (REST APIs) deployed per region.\nDatabase Layer: Aurora Global Database (writer in US, read replicas in EU/Asia).\nFile Layer: S3 buckets with CRR + presigned uploads.\nRouting Layer: Route 53 + ALB/API Gateway per region.\nUser Layer: Clients connect to nearest region, reads are local, writes forwarded to primary.\nTechnical Implementation Implementation Phases (8 weeks)\nPlanning (Week 0)\nChoose primary (us-east-1) and secondary regions (eu-west-1, ap-southeast-1).\nFinalize VPC design, domain, and S3 bucket naming.\nPhase 1: MVP (Weeks 1–3)\nDeploy core microservices (Auth, Board, Task) in primary region.\nAurora MySQL single-cluster as DB.\nS3 + CloudFront for frontend hosting.\nCI/CD pipeline for build, ECR push, ECS deploy.\nPhase 2: Multi-Region Expansion (Weeks 4–5)\nConvert Aurora to Global Database, add read replicas.\nDeploy ECS clusters in EU \u0026 Asia.\nRoute 53 latency-based routing enabled.\nConfigure S3 CRR.\nPhase 3: Cross-Region Events \u0026 Failover (Weeks 6–7)\nEventBridge/SNS cross-region event propagation.\nSecrets Manager \u0026 ECR replication.\nRunbook for Aurora promotion in failover scenarios.\nPhase 4: Testing \u0026 Demo (Week 8)\nEnd-to-end latency tests.\nFailover simulation.\nDocumentation \u0026 demo.\nTimeline \u0026 Milestones Month 1: Core MVP in US (Auth, Board, Task, S3, CloudFront, Aurora).\nMonth 2: Multi-region expansion (Aurora Global DB, ECS in EU/Asia, Route 53).\nMonth 3: Event propagation, monitoring, failover testing, final demo.\nBudget Estimation Estimated Monthly Costs (based on AWS Pricing Calculator):\nAurora MySQL Global Database: ~$350/month.\nECS Fargate (3 regions, ~4 services): ~$200/month.\nS3 + CloudFront: ~$30/month.\nRoute 53 (DNS + health checks): ~$5/month.\nECR replication: ~$10/month.\nEventBridge/SNS/Lambda: ~$20/month.\nMonitoring (CloudWatch/X-Ray): ~$15/month.\nTotal: $630/month ($7,500/year). Costs can be reduced by limiting regions or optimizing cluster sizes.\nRisk Assessment Risk Matrix\nAurora failover lag → Medium impact, Low probability.\nCross-region network latency → Medium impact, High probability.\nCost overruns → High impact, Medium probability.\nMitigation Strategies\nFailover playbooks tested regularly.\nDesign UI with optimistic updates to handle lag.\nEnable AWS budget alerts.\nContingency Plans\nPromote Aurora secondary region manually during primary outage.\nUse DynamoDB Global Tables for critical metadata if replication lag is an issue.\nReduce active regions if costs exceed expectations.\nExpected Outcomes Technical Improvements\nLow-latency access for global users.\nHigh availability and disaster recovery readiness.\nReal-time collaboration features.\nLong-Term Value\nScalable architecture for enterprise SaaS use cases.\nDemonstrates multi-region design pattern for future projects.\nProvides foundation for advanced analytics and ML integrations.",
    "description": "Multi-Region SaaS Task Management Platform A Global AWS Solution for Low-Latency, Resilient Collaboration\nExecutive Summary The Multi-Region SaaS Task Management Platform is designed to deliver a Trello/Asana-like experience with low latency and high availability for users across the US, EU, and Asia. Built with Spring Boot microservices and Aurora MySQL as the core database, the platform supports real-time collaboration, board/task management, and notifications.\nBy leveraging AWS Multi-Region services, the system provides:",
    "tags": [],
    "title": "Proposal",
    "uri": "/en/2-proposal/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "Blog 1: Hồ sơ quyết định kiến trúc (ADR): Thực tiễn tốt nhất để ra quyết định hiệu quả (12/09/2025 - W1)\nBlog 2: Định tuyến động sử dụng Máy chủ định tuyến AWS VPC (14/09/2025 - W1)\nBlog 3: Cách CommBank xây dựng nền tảng giao dịch CommSec luôn sẵn sàng và có khả năng vận hành bền vững.(18/09/2025 - W2)\nBlog 4: Doing task C…\nBlog 5: Xây dựng Ứng dụng Đa Vùng với Các Dịch vụ AWS – Phần 1: Tính toán, Mạng và Bảo mật (29/09/2025 - W4)\nWeek 6: Xây dựng Ứng Dụng Đa Vùng với Các Dịch vụ AWS – Phần 2: Dữ Liệu và Sao Chép(30/09/2025 - W4)\nWeek 7: Doing task F…\nWeek 8: Doing task G…\nWeek 9: Doing task H…\nWeek 10: Doing task I…\nWeek 11: Doing task J…\nWeek 12: Doing task K…",
    "description": "Blog 1: Hồ sơ quyết định kiến trúc (ADR): Thực tiễn tốt nhất để ra quyết định hiệu quả (12/09/2025 - W1)\nBlog 2: Định tuyến động sử dụng Máy chủ định tuyến AWS VPC (14/09/2025 - W1)\nBlog 3: Cách CommBank xây dựng nền tảng giao dịch CommSec luôn sẵn sàng và có khả năng vận hành bền vững.(18/09/2025 - W2)\nBlog 4: Doing task C…\nBlog 5: Xây dựng Ứng dụng Đa Vùng với Các Dịch vụ AWS – Phần 1: Tính toán, Mạng và Bảo mật (29/09/2025 - W4)",
    "tags": [],
    "title": "Translated Blogs",
    "uri": "/en/3-translated_blogs/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Events Participated",
    "uri": "/en/4-events-participated/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Workshop",
    "uri": "/en/5-workshop/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Self Assesment",
    "uri": "/en/6-self-assesment/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Sharing and Feedback",
    "uri": "/en/7-sharing-and-feedback/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Translated Blogs",
    "content": "Xây dựng Ứng dụng Đa Vùng với Các Dịch vụ AWS – Phần 1: Tính toán, Mạng và Bảo mật Tác giả: Joe Chapman và Sebastian Leks - 08/12/2021\nChủ đề: Amazon CloudFront, Amazon EC2, Amazon Elastic Block Store (Amazon EBS), Amazon Route 53, Amazon Simple Storage Service (S3), Amazon VPC, Architecture, AWS CloudTrail, AWS Global Accelerator, AWS Identity and Access Management (IAM), AWS Secrets Manager, AWS Security Hub, AWS Transit Gateway, AWS Well-Architected Permalink Share\nNhiều dịch vụ AWS có các tính năng giúp bạn xây dựng và quản lý kiến trúc đa vùng (multi-Region), nhưng việc xác định những khả năng này trong hơn 200 dịch vụ có thể là một thách thức lớn.\nTrong loạt blog gồm 3 phần này, chúng tôi sẽ chọn lọc từ hơn 200 dịch vụ đó và tập trung vào những dịch vụ có tính năng cụ thể hỗ trợ bạn xây dựng ứng dụng đa vùng. Trong Phần 1, chúng ta sẽ xây dựng nền tảng với các dịch vụ bảo mật, mạng, và tính toán của AWS. Ở Phần 2, chúng ta sẽ bổ sung các chiến lược dữ liệu và sao chép. Cuối cùng, trong Phần 3, chúng ta sẽ tìm hiểu về lớp ứng dụng và quản lý. Khi đi qua từng phần, chúng ta sẽ dần xây dựng một ứng dụng mẫu để minh họa cách kết hợp các dịch vụ này nhằm tạo ra một ứng dụng đa vùng.\nNhững điều cần cân nhắc trước khi bắt đầu Các AWS Region được xây dựng với nhiều Availability Zone (AZ) tách biệt và cách ly về mặt vật lý. Cách tiếp cận này cho phép bạn tạo ra các workload có độ sẵn sàng cao, tuân thủ nguyên tắc Well-Architected, trải rộng trên nhiều AZ để đạt được khả năng chịu lỗi tốt hơn. Điều này đáp ứng được mục tiêu khả dụng cho hầu hết các ứng dụng, nhưng vẫn có một số lý do chung khiến bạn có thể muốn mở rộng ra ngoài một Region duy nhất:\nMở rộng ra khán giả toàn cầu: khi ứng dụng phát triển và lượng người dùng trở nên phân tán về mặt địa lý, có thể sẽ cần giảm độ trễ cho các khu vực khác nhau trên thế giới.\nGiảm RPO (Recovery Point Objective) và RTO (Recovery Time Objective): như một phần của kế hoạch khắc phục thảm họa (Disaster Recovery – DR) đa vùng.\nLuật pháp và quy định địa phương: có thể có những yêu cầu nghiêm ngặt về lưu trú dữ liệu (data residency) và quyền riêng tư mà bạn buộc phải tuân thủ.\nNếu bạn đang xây dựng một ứng dụng đa vùng mới, bạn nên cân nhắc tập trung vào các dịch vụ AWS có sẵn chức năng hỗ trợ. Với những ứng dụng hiện có, cần phải xem xét kỹ hơn để xác định kiến trúc nào có khả năng mở rộng nhất nhằm đáp ứng sự phát triển. Các phần tiếp theo sẽ xem xét những dịch vụ này, đồng thời nêu bật các trường hợp sử dụng và thực tiễn tốt nhất.\nQuản lý danh tính và truy cập trên nhiều Region Xây dựng nền tảng bảo mật bắt đầu từ việc thiết lập các quy tắc xác thực (authentication) và phân quyền (authorization) phù hợp. Hệ thống xử lý các yêu cầu này phải có khả năng chịu lỗi cao để xác minh và cấp quyền nhanh chóng, đáng tin cậy. AWS Identity and Access Management (IAM) đáp ứng điều này bằng cách cung cấp một cơ chế đáng tin cậy để bạn quản lý quyền truy cập vào các dịch vụ và tài nguyên AWS. IAM có khả năng sẵn sàng trên nhiều Region một cách tự động, mà bạn không cần phải cấu hình gì thêm.\nĐể hỗ trợ quản lý người dùng Windows, thiết bị và ứng dụng trong một mạng đa vùng, bạn có thể thiết lập AWS Directory Service for Microsoft Active Directory Enterprise Edition, dịch vụ này sẽ tự động sao chép dữ liệu thư mục giữa các Region. Điều này giúp giảm độ trễ khi tra cứu thư mục bằng cách sử dụng thư mục gần nhất, đồng thời tăng tính bền vững bằng cách trải rộng trên nhiều Region. Lưu ý rằng điều này cũng kéo theo “số phận chung” giữa các domain controller trong kiến trúc đa vùng, vì các thay đổi group policy sẽ được lan truyền đến tất cả các máy chủ thành viên.\nCác ứng dụng cần lưu trữ, luân chuyển và kiểm toán bí mật một cách an toàn, chẳng hạn như mật khẩu cơ sở dữ liệu, nên sử dụng AWS Secrets Manager. Dịch vụ này mã hóa các bí mật bằng khóa của AWS Key Management Service (AWS KMS) và có thể sao chép các bí mật sang Region thứ cấp để đảm bảo ứng dụng có thể nhanh chóng lấy được bí mật từ Region gần nhất.\nMã hóa trên nhiều Region AWS KMS có thể được sử dụng để mã hóa dữ liệu khi lưu trữ (data at rest) và được dùng rộng rãi cho việc mã hóa trên các dịch vụ AWS. Theo mặc định, các khóa chỉ giới hạn trong một Region. Những dịch vụ AWS như Amazon Simple Storage Service (Amazon S3) cross-Region replication và Amazon Aurora Global Database (sẽ được đề cập trong phần 2) giúp đơn giản hóa quá trình mã hóa và giải mã bằng các khóa khác nhau ở từng Region.\nĐối với các phần khác trong ứng dụng đa vùng của bạn phụ thuộc vào khóa KMS, bạn có thể thiết lập AWS KMS multi-Region keys để sao chép cả key material và key ID sang Region thứ hai. Điều này loại bỏ nhu cầu giải mã rồi mã hóa lại dữ liệu với một khóa khác ở từng Region. Ví dụ, multi-Region keys có thể được dùng để giảm độ phức tạp trong các hoạt động mã hóa của ứng dụng đa vùng cho dữ liệu được lưu trữ trên nhiều Region.\nKiểm toán và khả năng quan sát trên nhiều Region Một thực tiễn tốt nhất là cấu hình AWS CloudTrail để lưu lại toàn bộ hoạt động AWS API liên quan trong tài khoản của bạn nhằm phục vụ mục đích kiểm toán. Khi bạn sử dụng nhiều Region hoặc nhiều tài khoản, các log CloudTrail này nên được tập hợp về một bucket Amazon S3 duy nhất để thuận tiện cho việc phân tích. Để ngăn chặn việc sử dụng sai mục đích, các log tập trung này cần được coi là dữ liệu nhạy cảm hơn, chỉ cấp quyền truy cập cho các hệ thống và nhân sự chủ chốt.\nĐể theo dõi các phát hiện từ AWS Security Hub, bạn có thể tổng hợp và liên kết các phát hiện từ nhiều vị trí về một Region duy nhất. Đây là cách đơn giản để tạo một cái nhìn tập trung về các phát hiện của Security Hub trên nhiều tài khoản và nhiều Region. Sau khi thiết lập, các phát hiện sẽ liên tục được đồng bộ giữa các Region để giúp bạn luôn nắm được kết quả toàn cầu trên một bảng điều khiển duy nhất.\nChúng tôi đã kết hợp những tính năng này trong Hình 1. Chúng tôi sử dụng IAM để cấp quyền truy cập chi tiết đến các dịch vụ và tài nguyên AWS, Directory Service for Microsoft AD để xác thực người dùng trong các ứng dụng Microsoft, và Secrets Manager để lưu trữ thông tin đăng nhập cơ sở dữ liệu nhạy cảm. Dữ liệu của chúng tôi, di chuyển tự do giữa các Region, được mã hóa bằng KMS multi-Region keys, và toàn bộ hoạt động truy cập AWS API được ghi lại bởi CloudTrail, sau đó tập trung vào một bucket S3 trung tâm mà chỉ nhóm bảo mật của chúng tôi mới có quyền truy cập.\nHình 1. Các dịch vụ bảo mật, danh tính và tuân thủ đa vùng\rXây dựng mạng toàn cầu Đối với các tài nguyên được triển khai trong các mạng ảo ở những Region khác nhau, Amazon Virtual Private Cloud (Amazon VPC) cho phép định tuyến riêng tư giữa các Region và tài khoản bằng VPC peering. Các tài nguyên này có thể giao tiếp với nhau bằng địa chỉ IP riêng mà không cần internet gateway, VPN, hoặc thiết bị mạng riêng biệt. Tính năng này hoạt động tốt cho các mạng nhỏ chỉ cần một vài kết nối peering. Tuy nhiên, định tuyến bắc cầu (transitive routing) không được hỗ trợ, và khi số lượng VPC peering tăng lên, cấu trúc mạng dạng mesh có thể trở nên khó quản lý và khắc phục sự cố.\nAWS Transit Gateway giúp giảm bớt những khó khăn này bằng cách tạo một hub trung chuyển mạng, kết nối các VPC và mạng tại chỗ (on-premises). Khả năng định tuyến của Transit Gateway có thể mở rộng sang các Region khác thông qua Transit Gateway inter-Region peering, để tạo ra một mạng riêng tư phân tán toàn cầu cho tài nguyên của bạn.\nXây dựng một cách định tuyến đáng tin cậy và tiết kiệm chi phí để đưa người dùng đến các ứng dụng internet phân tán đòi hỏi những bản ghi Domain Name System (DNS) có độ sẵn sàng cao và khả năng mở rộng tốt. Amazon Route 53 chính là dịch vụ làm được điều đó.\nRoute 53 có nhiều chính sách định tuyến khác nhau. Ví dụ, bạn có thể định tuyến một yêu cầu đến bản ghi có độ trễ mạng thấp nhất, hoặc đưa người dùng ở một vị trí địa lý cụ thể đến endpoint ứng dụng cục bộ. Đối với kịch bản khắc phục thảm họa (DR), Route 53 Application Recovery Controller (Route 53 ARC) cung cấp một giải pháp failover toàn diện với mức phụ thuộc tối thiểu. Các routing policy, safety check, và readiness check của Route 53 ARC giúp bạn thực hiện failover qua nhiều Region, AZ, và môi trường on-premises một cách đáng tin cậy.\nAmazon CloudFront – mạng phân phối nội dung (CDN) – là một dịch vụ toàn cầu, được xây dựng trên hơn 300 điểm hiện diện (PoP) khắp thế giới. Các ứng dụng có nhiều origin khả dụng (ví dụ như nhiều Region) có thể dùng CloudFront origin failover để tự động chuyển hướng sang origin dự phòng khi origin chính gặp sự cố. Khả năng của CloudFront không chỉ dừng lại ở việc phân phát nội dung, mà còn có thể chạy tính toán ở edge. CloudFront Functions giúp dễ dàng chạy các đoạn mã JavaScript nhẹ, trong khi AWS Lambda@Edge cho phép bạn chạy các hàm Node.js và Python gần hơn với người dùng ứng dụng, từ đó cải thiện hiệu năng và giảm độ trễ. Việc đưa compute ra edge giúp giảm tải cho origin và mang lại phản hồi nhanh hơn cho người dùng toàn cầu.\nĐược xây dựng trên mạng lưới toàn cầu của AWS, AWS Global Accelerator cung cấp hai địa chỉ IP anycast tĩnh để làm điểm truy cập duy nhất cho các ứng dụng hướng internet. Bạn có thể linh hoạt thêm hoặc xóa origin trong khi hệ thống vẫn tự động định tuyến lưu lượng đến endpoint khu vực khỏe mạnh gần nhất. Nếu phát hiện lỗi, Global Accelerator sẽ tự động chuyển hướng lưu lượng đến một endpoint khả dụng chỉ trong vài giây, mà không cần thay đổi địa chỉ IP tĩnh.\nHình 2 minh họa việc sử dụng Route 53 latency-based routing policy để định tuyến người dùng đến endpoint nhanh nhất, CloudFront để phân phát nội dung tĩnh như video và hình ảnh, và Transit Gateway để tạo một mạng riêng toàn cầu, giúp các thiết bị của chúng tôi có thể giao tiếp an toàn trên nhiều Region.\nHình 2. Kết nối AWS VPC và phân phối nội dung\rXây dựng và quản lý lớp tính toán (compute layer) Mặc dù Amazon Elastic Compute Cloud (Amazon EC2) và các Amazon Elastic Block Store (Amazon EBS) volume liên kết chỉ tồn tại trong một AZ, Amazon Data Lifecycle Manager có thể tự động hóa quá trình tạo và sao chép snapshot EBS giữa các Region. Điều này giúp nâng cao chiến lược khắc phục thảm họa (DR) bằng cách cung cấp một lựa chọn sao lưu và khôi phục lạnh (cold backup-and-restore) đơn giản cho các volume EBS. Nếu bạn cần sao lưu nhiều hơn chỉ các EBS volume, AWS Backup cung cấp một nơi tập trung để thực hiện việc này trên nhiều dịch vụ (sẽ được đề cập trong phần 2).\nMột EC2 instance được xây dựng dựa trên một Amazon Machine Image (AMI). AMI xác định cấu hình của instance như lưu trữ, quyền khởi chạy, và ánh xạ thiết bị. Khi cần tạo và phát hành một image chuẩn mới, EC2 Image Builder giúp đơn giản hóa quá trình xây dựng, kiểm thử, và triển khai AMI mới. Nó cũng hỗ trợ sao chép AMI sang các Region bổ sung, loại bỏ việc phải sao chép thủ công AMI nguồn sang các Region đích.\nCác ứng dụng dựa trên microservice sử dụng container sẽ hưởng lợi từ thời gian khởi động nhanh hơn. Amazon Elastic Container Registry (Amazon ECR) có thể đảm bảo điều này diễn ra nhất quán trên nhiều Region bằng cách sao chép image riêng tư ở cấp độ registry. Một ECR private registry có thể được cấu hình cho cả cross-Region hoặc cross-account replication, để đảm bảo image của bạn luôn sẵn sàng ở các Region thứ cấp khi cần.\nKhi kiến trúc mở rộng ra nhiều Region, việc theo dõi tài nguyên được cấp phát ở đâu có thể trở nên khó khăn. Amazon EC2 Global View giúp giảm bớt vấn đề này bằng cách cung cấp một bảng điều khiển tập trung, hiển thị các tài nguyên EC2 như instance, VPC, subnet, security group, và volume trong tất cả các Region đang hoạt động.\nChúng tôi kết hợp các tính năng compute layer này trong Hình 3 bằng cách sử dụng EC2 Image Builder để sao chép AMI chuẩn mới nhất của chúng tôi sang nhiều Region để triển khai. Chúng tôi cũng sao lưu mỗi EBS volume trong 3 ngày và sao chép nó sang nhiều Region bằng Data Lifecycle Manager.\nHình 3. Sao chép AMI và ảnh chụp nhanh EBS giữa các Vùng (Regions)\rĐưa tất cả lại với nhau Ở cuối mỗi phần của loạt bài blog này, chúng tôi sẽ xây dựng một ứng dụng mẫu dựa trên các dịch vụ đã đề cập. Điều này cho thấy cách bạn có thể kết hợp các dịch vụ để xây dựng một ứng dụng đa Vùng (multi-Region) với AWS. Chúng tôi không sử dụng tất cả dịch vụ được nhắc đến, chỉ chọn những dịch vụ phù hợp với trường hợp sử dụng.\nChúng tôi xây dựng ví dụ này để mở rộng đến phạm vi toàn cầu. Ứng dụng yêu cầu tính sẵn sàng cao giữa các Vùng, và ưu tiên hiệu năng hơn là tính nhất quán tuyệt đối. Chúng tôi đã chọn các dịch vụ sau (trong bài viết này) để đạt được mục tiêu:\nRoute 53 với chính sách định tuyến theo độ trễ (latency routing) để đưa người dùng đến vùng triển khai có độ trễ thấp nhất.\nCloudFront được thiết lập để phân phối nội dung tĩnh. Region 1 là nguồn gốc chính, nhưng chúng tôi đã cấu hình dự phòng nguồn gốc (origin failover) sang Region 2 trong trường hợp có sự cố.\nỨng dụng phụ thuộc vào một số API của bên thứ ba, vì vậy Secrets Manager với khả năng sao chép đa Vùng đã được thiết lập để lưu trữ thông tin khóa API nhạy cảm.\nCloudTrail logs được tập trung tại Region 1 để dễ dàng phân tích và kiểm toán.\nSecurity Hub tại Region 1 được chọn làm nơi tập hợp các phát hiện từ tất cả các Vùng.\nĐây là ứng dụng dựa trên container, chúng tôi dựa vào Amazon ECR replication tại mỗi vị trí để nhanh chóng tải về các image mới nhất tại chỗ.\nĐể liên lạc qua IP riêng giữa các Vùng, một Transit Gateway được thiết lập tại mỗi Vùng với kết nối liên Vùng. VPC peering cũng có thể hoạt động, nhưng vì dự kiến mở rộng ra nhiều Vùng hơn trong tương lai nên chúng tôi chọn Transit Gateway như giải pháp lâu dài.\nIAM được dùng để cấp quyền quản lý tài nguyên AWS.\nHình 4. Xây dựng ứng dụng với các dịch vụ AWS đa Vùng, sử dụng những dịch vụ đã đề cập trong Phần 1\rTóm tắt Khi thiết kế một ứng dụng đa Vùng (multi-Region), việc xây dựng một nền tảng vững chắc là vô cùng quan trọng. Nền tảng này sẽ giúp bạn phát triển ứng dụng nhanh chóng theo cách an toàn, đáng tin cậy và linh hoạt. Nhiều dịch vụ AWS đã tích hợp sẵn các tính năng hỗ trợ bạn xây dựng kiến trúc đa Vùng.\nTùy vào lý do mở rộng ra ngoài một Vùng duy nhất mà kiến trúc của bạn sẽ khác nhau. Trong bài viết này, chúng tôi đã đề cập đến các tính năng cụ thể của những dịch vụ AWS về bảo mật, mạng và tính toán (compute) — với khả năng tích hợp sẵn để giảm bớt khối lượng công việc nặng nề và lặp lại.\nTrong các bài viết tiếp theo, chúng tôi sẽ tiếp tục đề cập đến các dịch vụ về dữ liệu, ứng dụng và quản lý.\n*** Sẵn sàng để bắt đầu? *** Chúng tôi đã chọn một số AWS Solutions và AWS Blogs để hỗ trợ bạn!\n*** Bạn đang tìm thêm nội dung về kiến trúc? *** AWS Architecture Center cung cấp sơ đồ kiến trúc tham chiếu, các giải pháp kiến trúc đã được kiểm chứng, những thực tiễn tốt nhất theo Well-Architected, các mẫu (patterns), biểu tượng và nhiều hơn nữa!",
    "description": "Xây dựng Ứng dụng Đa Vùng với Các Dịch vụ AWS – Phần 1: Tính toán, Mạng và Bảo mật Tác giả: Joe Chapman và Sebastian Leks - 08/12/2021\nChủ đề: Amazon CloudFront, Amazon EC2, Amazon Elastic Block Store (Amazon EBS), Amazon Route 53, Amazon Simple Storage Service (S3), Amazon VPC, Architecture, AWS CloudTrail, AWS Global Accelerator, AWS Identity and Access Management (IAM), AWS Secrets Manager, AWS Security Hub, AWS Transit Gateway, AWS Well-Architected Permalink Share\nNhiều dịch vụ AWS có các tính năng giúp bạn xây dựng và quản lý kiến trúc đa vùng (multi-Region), nhưng việc xác định những khả năng này trong hơn 200 dịch vụ có thể là một thách thức lớn.",
    "tags": [],
    "title": "Blog 5",
    "uri": "/en/3-translated_blogs/blog_5/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Week 6",
    "uri": "/en/1-worklog/1.6-week_6/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Translated Blogs",
    "content": "Xây dựng Ứng Dụng Đa Vùng với Các Dịch vụ AWS – Phần 2: Dữ Liệu và Sao Chép Tác giả: Joe Chapman và Sebastian Leks - 12/01/2022\nChủ đề: Amazon Aurora, Amazon DocumentDB, Amazon DynamoDB, Amazon ElastiCache, Amazon RDS, Amazon Redshift, Amazon Simple Storage Service (S3), Architecture, AWS Backup, AWS DataSync, AWS Global Accelerator\nDữ liệu là trung tâm của các ứng dụng có trạng thái (stateful applications). Mô hình nhất quán dữ liệu sẽ khác nhau khi lựa chọn triển khai trong một Region hay nhiều Region. Trong bài viết này, phần 2/3, chúng ta sẽ tiếp tục chọn lọc các dịch vụ AWS, tập trung vào những dịch vụ hướng dữ liệu với các tính năng gốc (native features) giúp đưa dữ liệu đến đúng nơi cần thiết để hỗ trợ chiến lược đa vùng cho ứng dụng của bạn.\nỞ Phần 1 của loạt blog này, chúng ta đã xem xét cách sử dụng các dịch vụ tính toán (compute), mạng (networking), và bảo mật (security) của AWS để xây dựng nền tảng cho một ứng dụng multi-Region. Ở Phần 3, chúng ta sẽ tìm hiểu các dịch vụ quản lý và giám sát ứng dụng của AWS, giúp bạn xây dựng, theo dõi và duy trì ứng dụng multi-Region.\nNhững lưu ý khi sao chép dữ liệu Việc sao chép dữ liệu trên mạng AWS diễn ra rất nhanh, nhưng bạn cần nhớ rằng thời gian di chuyển của gói tin sẽ tăng lên theo khoảng cách vật lý mà gói tin cần đi qua. Vì lý do này, khi xây dựng ứng dụng multi-Region, bạn phải cân nhắc giữa tính nhất quán dữ liệu và hiệu năng.\nKhi xây dựng một hệ thống phân tán, cần xem xét định lý CAP (Consistency, Availability, Partition Tolerance). Định lý này chỉ ra rằng một ứng dụng chỉ có thể đạt được 2 trong 3 yếu tố, và bạn phải chấp nhận đánh đổi khi đưa ra lựa chọn:\nConsistency (Nhất quán) – tất cả các client luôn thấy cùng một trạng thái dữ liệu\nAvailability (Sẵn sàng) – tất cả các client luôn có thể đọc và ghi dữ liệu\nPartition Tolerance (Chịu lỗi phân mảnh mạng) – hệ thống vẫn hoạt động ngay cả khi có sự cố phân mảnh vật lý trong mạng\nTrong các kiến trúc single-Region, việc đạt được Consistency và Availability (CA) là điều thường thấy. Ví dụ: khi một ứng dụng chỉ kết nối đến một cơ sở dữ liệu quan hệ trong cùng một Region.\nTuy nhiên, với multi-Region applications, điều này trở nên khó khăn hơn vì độ trễ phát sinh do việc truyền dữ liệu qua khoảng cách địa lý xa. Vì thế, các hệ thống phân tán ở mức toàn cầu thường chấp nhận hy sinh tính nhất quán tuyệt đối, thay vào đó ưu tiên Availability và Partition Tolerance (AP). Mô hình này thường được gọi là eventual consistency (nhất quán cuối cùng).",
    "description": "Xây dựng Ứng Dụng Đa Vùng với Các Dịch vụ AWS – Phần 2: Dữ Liệu và Sao Chép Tác giả: Joe Chapman và Sebastian Leks - 12/01/2022\nChủ đề: Amazon Aurora, Amazon DocumentDB, Amazon DynamoDB, Amazon ElastiCache, Amazon RDS, Amazon Redshift, Amazon Simple Storage Service (S3), Architecture, AWS Backup, AWS DataSync, AWS Global Accelerator\nDữ liệu là trung tâm của các ứng dụng có trạng thái (stateful applications). Mô hình nhất quán dữ liệu sẽ khác nhau khi lựa chọn triển khai trong một Region hay nhiều Region. Trong bài viết này, phần 2/3, chúng ta sẽ tiếp tục chọn lọc các dịch vụ AWS, tập trung vào những dịch vụ hướng dữ liệu với các tính năng gốc (native features) giúp đưa dữ liệu đến đúng nơi cần thiết để hỗ trợ chiến lược đa vùng cho ứng dụng của bạn.",
    "tags": [],
    "title": "Blog 6",
    "uri": "/en/3-translated_blogs/blog_6/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Week 7",
    "uri": "/en/1-worklog/1.7-week_7/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Week 8",
    "uri": "/en/1-worklog/1.8-week_8/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Week 9",
    "uri": "/en/1-worklog/1.9-week_9/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Week 10",
    "uri": "/en/1-worklog/1.10-week_10/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Week 11",
    "uri": "/en/1-worklog/1.11-week_11/index.html"
  },
  {
    "breadcrumb": "Internship Report \u003e Worklog",
    "content": "Chapter X Some Chapter title Lorem Ipsum.",
    "description": "Chapter X Some Chapter title Lorem Ipsum.",
    "tags": [],
    "title": "Week 12",
    "uri": "/en/1-worklog/1.12-week_12/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categories",
    "uri": "/en/categories/index.html"
  },
  {
    "breadcrumb": "Internship Report",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tags",
    "uri": "/en/tags/index.html"
  }
]
